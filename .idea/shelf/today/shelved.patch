Index: app/scripts/modules/Auth/service/AuthService.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/scripts/modules/Auth/service/AuthService.js	(revision cace61564d34cde1f0bec6d542a93e1b77483485)
+++ app/scripts/modules/Auth/service/AuthService.js	(revision )
@@ -2,7 +2,7 @@
  * Created by trainee on 3/4/16.
  */
 define(['../module'], function (module) {
-    module.factory('AuthService', ['$http', function ($http) {
+    module.factory('AuthService', ['$http','$q', function ($http,$q) {
         var service = {
             role: null,
             error: null
@@ -19,14 +19,11 @@
         };
 
         service.signIn = function (currentLogin, currentPassword) {
-            return $http.post('/signIn', {login: currentLogin, password: currentPassword}).then(function () {
-                service.error = null;
-            },function () {
-                if (localStorage.getItem('currentUserLS')) {
-                    service.error = null;
-                } else {
-                    service.error = "Username or password is incorrect";
-                }
+            return $http.post('/signIn', {login: currentLogin, password: currentPassword})
+                .then(function (currentUser) {
+                return currentUser;
+            },function (err) {
+                return $q.reject(err)
             });
         };
         return service;
\ No newline at end of file
Index: app/scripts/modules/Auth/controller/AuthController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/scripts/modules/Auth/controller/AuthController.js	(revision cace61564d34cde1f0bec6d542a93e1b77483485)
+++ app/scripts/modules/Auth/controller/AuthController.js	(revision )
@@ -13,13 +13,11 @@
 
         self.signIn = function (currentLogin, currentPassword) {
             return AuthService.signIn(currentLogin, currentPassword)
-                .then(function () {
-                    if (!AuthService.error) {
+                .then(function (currentUser) {
-                        $scope.error = null;
-                        self.close();
+                    $scope.error = null;
+                    self.close();
-                    } else {
-                        $scope.error = AuthService.error;
-                    }
+                }, function (err) {
+                    $scope.error = err;
                 });
         };
     }]);
\ No newline at end of file
Index: app/scripts/fakeBackend.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/scripts/fakeBackend.js	(revision cace61564d34cde1f0bec6d542a93e1b77483485)
+++ app/scripts/fakeBackend.js	(revision )
@@ -27,9 +27,9 @@
                     }
                 }
                 if (localStorage.getItem('currentUserLS')){
-                return [200, currentUser, {}];
+                    return [200, currentUser, {}];
                 }else{
-                    return $q.reject();
+                    return [400,{errorCode:1,message:'invalid'}];//$q.reject('Username or password is incorrect');
                 }
             });
             $httpBackend.whenGET('/getUser').respond(currentUser);
\ No newline at end of file
